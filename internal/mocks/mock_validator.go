// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/validator/validator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDTOValidator is a mock of DTOValidator interface.
type MockDTOValidator struct {
	ctrl     *gomock.Controller
	recorder *MockDTOValidatorMockRecorder
}

// MockDTOValidatorMockRecorder is the mock recorder for MockDTOValidator.
type MockDTOValidatorMockRecorder struct {
	mock *MockDTOValidator
}

// NewMockDTOValidator creates a new mock instance.
func NewMockDTOValidator(ctrl *gomock.Controller) *MockDTOValidator {
	mock := &MockDTOValidator{ctrl: ctrl}
	mock.recorder = &MockDTOValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDTOValidator) EXPECT() *MockDTOValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockDTOValidator) Validate(arg0 interface{}) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].([]string)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockDTOValidatorMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockDTOValidator)(nil).Validate), arg0)
}
